// Shortcut for creating Android modules with consistent dependencies and configuration
// Not every module needs all these dependencies, but I'm lazy :shrug"
ext.androidModule = { Boolean isApplication = false ->
    if(isApplication) {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'kotlin-parcelize'
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'dagger.hilt.android.plugin'

    android {
        compileSdkVersion 30
        buildToolsVersion "30.0.2"

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }

        buildFeatures {
            viewBinding true
        }

        buildTypes {
            release {
                minifyEnabled false
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs += ['-module-name', project.path.replace(":", "_")]
        }

        useLibrary 'android.test.runner'
        useLibrary 'android.test.base'
        useLibrary 'android.test.mock'
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$versions.kotlin_serialization_json"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

        implementation "androidx.appcompat:appcompat:$versions.appcompat"
        implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
        implementation "androidx.fragment:fragment-ktx:$versions.fragment"

        implementation "com.google.android.material:material:$versions.material"

        implementation "nav.enro:enro:$versions.enro"
        kapt "nav.enro:enro-processor:$versions.enro"

        implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"

        implementation "com.google.dagger:hilt-android:$versions.hilt"
        kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"
        implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_android"
        kapt "androidx.hilt:hilt-compiler:$versions.hilt_android"

        testImplementation "androidx.test.ext:junit:$versions.junit_android"
        testImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
        testImplementation "androidx.test:runner:$versions.test_runner"
        kaptTest "com.google.dagger:hilt-android-compiler:$versions.hilt"

        androidTestImplementation "androidx.test.ext:junit:$versions.junit_android"
        androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
        androidTestImplementation "androidx.test:runner:$versions.test_runner"
        kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.hilt"
    }
}

ext.versions = [
        kotlin: "1.4.20",
        kotlin_serialization_json: "1.0.1",
        coroutines: "1.4.2",

        retrofit: "2.9.0",

        enro: "1.2.6",

        hilt: "2.30.1-alpha",
        hilt_android: "1.0.0-alpha02",

        appcompat: "1.2.0",
        constraintlayout: "2.0.4",
        lifecycle: "2.2.0",
        material: "1.2.1",
        fragment: "1.2.5",

        junit: "4.13.1",
        junit_android: "1.1.2",
        test_runner: "1.3.0",
        espresso: "3.3.0"
]